/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    combos {
        compatible = "zmk,combos";

        Gaming_Layer {
            bindings = <&tog 7>;
            key-positions = <38 39>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        Default {
            bindings = <
&trans  &kp Q           &kp W           &kp E               &kp R             &kp T        &kp Y        &kp U              &kp I                &kp O            &kp SQT          &trans
&trans  &mt LEFT_WIN A  &mt LEFT_ALT S  &mt LEFT_CONTROL D  &mt LEFT_SHIFT F  &kp G        &kp H        &mt RIGHT_SHIFT J  &mt RIGHT_CONTROL K  &mt RIGHT_ALT L  &mt RIGHT_GUI P  &trans
&trans  &kp Z           &kp X           &kp C               &kp V             &kp B        &kp COMMA    &kp N              &kp M                &kp DOT          &kp SLASH        &trans
                                        &lt 1 ESCAPE        &lt 2 SPACE       &lt 3 TAB    &lt 4 ENTER  &lt 5 BACKSPACE    &tog 6
            >;
        };

        Media {
            bindings = <
&trans  &trans    &trans    &trans     &trans     &trans    &bt BT_CLR        &trans            &kp C_BRIGHTNESS_DEC  &kp C_BRIGHTNESS_INC  &trans              &trans
&trans  &kp LGUI  &kp LALT  &kp LCTRL  &kp LSHFT  &trans    &trans            &kp C_REWIND      &kp C_VOL_DN          &kp C_VOL_UP          &kp C_FAST_FORWARD  &trans
&trans  &trans    &trans    &trans     &trans     &trans    &bt BT_SEL 0      &bt BT_SEL 1      &bt BT_SEL 2          &bt BT_SEL 3          &bt BT_SEL 4        &trans
                            &trans     &trans     &trans    &kp C_STOP_EJECT  &kp C_PLAY_PAUSE  &kp C_MUTE
            >;
        };

        Navigation {
            bindings = <
&trans  &trans        &trans        &trans     &trans          &trans    &kp LC(X)      &kp LC(C)  &kp UP_ARROW    &kp LC(P)    &kp LC(Y)  &trans
&trans  &kp LEFT_GUI  &kp LEFT_ALT  &kp LCTRL  &kp LEFT_SHIFT  &trans    &kp CLCK       &kp LEFT   &kp DOWN_ARROW  &kp RIGHT    &kp LC(Z)  &trans
&trans  &trans        &trans        &trans     &trans          &trans    &kp INSERT     &kp HOME   &kp PAGE_DOWN   &kp PAGE_UP  &kp END    &trans
                                    &trans     &to 0           &trans    &kp RIGHT_ALT  &to 6      &trans
            >;
        };

        Numbers {
            bindings = <
&trans  &trans    &trans    &trans     &trans     &trans    &kp LEFT_BRACKET  &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp RIGHT_BRACKET  &trans
&trans  &kp LGUI  &kp LALT  &kp LCTRL  &kp LSHFT  &trans    &kp COLON         &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &kp EQUAL          &trans
&trans  &trans    &trans    &trans     &trans     &trans    &kp GRAVE         &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp BACKSLASH      &trans
                            &trans     &trans     &trans    &kp MINUS         &kp NUMBER_0  &kp PERIOD
            >;
        };

        Symbols {
            bindings = <
&trans  &kp LEFT_BRACE  &kp AMPERSAND    &kp ASTERISK          &kp LEFT_PARENTHESIS   &kp RIGHT_BRACE         &trans  &trans     &trans     &trans    &trans    &trans
&trans  &kp COLON       &kp DOLLAR       &kp PERCENT           &kp CARET              &kp PLUS                &trans  &kp RSHFT  &kp RCTRL  &kp RALT  &kp LGUI  &trans
&trans  &kp TILDE       &kp EXCLAMATION  &kp AT_SIGN           &kp HASH               &kp PIPE                &trans  &trans     &trans     &trans    &trans    &trans
                                         &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &mt UNDERSCORE MINUS    &trans  &trans     &trans
            >;
        };

        Function {
            bindings = <
&trans  &kp F12  &kp F7  &kp F8    &kp F9     &kp PRINTSCREEN    &trans  &trans     &trans     &trans    &trans    &trans
&trans  &kp F11  &kp F4  &kp F5    &kp F6     &kp SCROLLLOCK     &trans  &kp RSHFT  &kp RCTRL  &kp RALT  &kp LGUI  &trans
&trans  &kp F10  &kp F1  &kp F2    &kp F3     &kp PAUSE_BREAK    &trans  &trans     &trans     &trans    &trans    &trans
                         &kp RGUI  &kp SPACE  &kp TAB            &trans  &trans     &trans
            >;
        };

        Strdy {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&none  &kp V  &kp M  &kp L       &kp R      &kp P      &kp X       &kp F          &kp O    &kp U          &kp J      &none
&none  &kp S  &kp T  &kp R       &kp D      &kp Y      &kp PERIOD  &kp N          &kp A    &kp E          &kp I      &none
&none  &kp Z  &kp K  &kp Q       &kp G      &kp W      &kp B       &kp H          &kp SQT  &kp SEMICOLON  &kp COMMA  &none
                     &kp ESCAPE  &kp SPACE  &kp TAB    &kp ENTER   &kp BACKSPACE  &tog 6
            >;
        };

        Gaming {
            bindings = <
&trans  &kp NUMBER_5      &kp N1  &kp N2   &kp N3   &kp N4       &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp GRAVE         &kp Q   &kp W    &kp E    &kp R        &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp LEFT_CONTROL  &kp G   &kp P    &kp I    &kp T        &trans  &trans  &trans  &trans  &trans  &trans
                                  &kp ESC  &kp TAB  &kp SPACE    &to 0   &trans  &trans
            >;
        };
    };
};
